c4.复合数据类型
数值、字符串、布尔类型都是js的简单数据类型，复合数据类型有对象、数组等
1>常用内置对象
	面向对象设计模式种，将数据和处理数据的方法绑定在一块，形成一个整体成为对象
	对象封装数据和操作数据方法，使用前必须创建一个对象，使用new来创建一个对象
	var obj=new object()   创建新对象
		Array   数组对象 ，封装和数组相关操作和内容
		Boolean 布尔对象
		Date    日期对象，封装了和日期相关操作和内容
		Maths   数学对象，提供基本数学函数和常量
		Global  全局对象，全局函数和全局对象
2>日期对象
	典型应用是获取当前时间
3>全局对象
	全局方法的拥有者
	isNaN() 判断参数是否是非数字，返回的值是布尔类型
	NaN     not  a  number
	如果参数是特殊非数字值NaN，返回值为真，否则返回值为假
	parseInt()    返回字符串转换得到的整数
	parseFloat()  返回字符串转换得到的浮点数
4>字符串对象
	封装了和字符串相关的特性，可以对字符串进行剪切、拼接、合并、替换等等
	调用string对线的方法或者属性
	string([val])
		val 可选项
5>数学对象
	封装了和数学相关特性,包含一些常数和数学函数
	调用Math对象的方法
	math.[{属性(方法名)}]
		PI   	返回圆周率
		abs 	返回数字的绝对值
		sin 	返回正弦
		min 	返回最小值
		max 	返回最大值
6>数组对象
	js中基本数据类型，封装了和数组相关的属性和方法
	房间1       房间2       房间3
	周冬雨      范冰冰      李冰冰
	创建数组的方式
		1.通过new运算符调用array对象构造函数
			var a=new Array()
		2.通过构造函数传递元素为参数(创建带指定元素的数组)
			var a=new Array(10,20,'gaga')
		3.直接将元素放入[]中，元素通过逗号隔开
			var a=[1,2,3,4]
		4.创建指定数组(元素的个数)
			var a=new Array(4)
c5.其他数据类型
	1>函数
		函数角色2种，一种是数据类型，一种是程序设计
		定义函数的方式
			function typename(arg)
			{
				this.arg=arg
			}
	2>空值
		之前所说的数据类型都有自己内容，空值是什么都没有(null)
		注意: = 代表赋值  == 代表比较  ===代表对象比较
	3>不确定数据类型
		undefined 表示一个变量什么都没得到，空都没有
		在应用里面null和undefined实际意义相同
	4>数据类型转换
		1>隐式数据类型转换
			程序运行时候会结合上下文需要自动将数据转换为另外一种数据
		2>显式数据类型转换
			parseInt()
			parseFloat()
===========================================================================
1.常量和变量
	a.常量
		从始至终都不能改变的数据
		常量的种类包含布尔类型，字符类型，数值类型，null等等
		"天儿不错！"   字符类型
		077           数值
		true          布尔
	b.变量
		1>什么是变量
			程序中可以发生改变的量，专业说法叫做内存单元
			可以理解为容器，变量名代表分配给他们的内存单元
		2>变量的定义
			var 变量名=值      定义变量
			变量名=值          赋值
			var 变量名         定义变量
			字符类型变量
				var s='hello'
			数值类型变量
				var t=100
			布尔类型变量
				var a=true
		3>变量的命名规则
			变量名必须以字母或者_或者$开头后面可以跟数字或者字符串，不能使用特殊符号
			js对标识符大小写敏感
		4>变量的作用域
			有效范围，js变量有全局和局部之分， 变量名相同时候局部变量优先全局变量
2.运算符和表达式
	a.表达式
		产生结果的式子，表达式可以作为参数传递给函数或者将表达式赋值给变量
	b.操作数
		操作数是表达式中的常量或者变量
		(a+b)/c+d
	c.运算符
		c1.算数运算符
			在表达式中起计算作用，在数学中就是加减乘除
			+
			/
			*
			/
			%
		c2.关系运算符
			比较两个操作数大于小于等运算符，返回的值是布尔值
			1>相等运算符，判断两个操作数是否相等
				如果相等返回真，否则返回假
			2>等同运算符
				== 并非严格意义上的相等性判断，通过数据类型转换也可以返回真
				=== 严格意义上相等，他们的值和数据类型完全一致才能返回真
			3>不等运算符
				使用！=返回一个布尔值判断两个操作数是否不相等，如果不相等返回真，否则返回假
			4>不等同运算符
				！==和等同运算符正好相反，严格不相等返回真
			5>比较运算符
				两个操作数的比较，返回值只能是真或者假
				>
				<
				=
				>=
				<=
				!=
		c3.逻辑运算符
			1>逻辑与
				操作符&&，属于双目运算符，操作数被当成布尔类型，可以是变量也可以是常量
			2>逻辑或
				操作符||,属于双目运算符，对两个操作数进行或运算，满足一个就会返回真
			3>逻辑非
				操作符！属于单目运算符，对操作数逻辑值取反，返回一个布尔值
		c4.其他运算符
			1>类型检测运算符
				js中每个数据都有数据类型，可以通过typeof获得数据的数据类型
				number
				string
				Boolean
				object
				function
			2>条件运算符
				可以根据条件在两个语句中选择一个执行,三目运算符
				条件表达式?语句1:语句2
				满足条件执行语句1，不满足执行语句2
			3>void运算符
				有些位置不需要返回值，比如js代码调用浏览器
			4>数组存取运算符
			5>delete运算符
				可以删除对象的一个属性或者数组的一个元素，js对象的属性可以动态添加，也可以动态删除
			6>this运算符
				准确说是一个关键字，可以理解为运算符
